""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""" VIM Specifi mapping for Qwerty/azerty keyboard layouts
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let my_layout="qwerty"

""""""""""""""""""""{{{ KEYBINDINGS

" Ease access to visual mode commands
map v <C-v>
vmap i <S-i>

" Map for Bloc selection ?
map  # {v}! par 72<CR>
map  & {v}! par 72j<CR>

" Map split swing
nmap  <Tab> <C-w>w

" Toggle spelling (and spell language choice)
map  <leader>se :setlocal spell! spelllang=en<CR>
map  <leader>sf :setlocal spell! spelllang=fr<CR>

" Toggle highlight search
map  <Space> :set invhls<CR>

" Toggle CursorLine/-Column highlighting
" Note that CursorLine/-Column usage may significatively slow vim (especially with big file)
nmap <leader>c! :set cursorline!<cr>
nmap <leader>c? :set cursorcolumn!<cr>

" Toggle Paste mode
set pastetoggle=<leader>p

" In visual mode, replace block
cmap <C-g> <C-u><ESC>

" Allows sticky shift to go through as planned
" -bang ... <bang> allows exclamation mark to work as well
command! -bang W w<bang>
command! -bang Q q<bang>
command! -bang WQ wq<bang>
command! -bang Wq wq<bang>

" allows to use ; instead of : : no shift needed anymore ! :-)
nnoremap ; :

" uses sudo mode afterwards
cmap w!! w !sudo tee % >/dev/null

" Forces to get used to vim interface.
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" alternative for the unreachable escape key
" (Note that CTRL+C is also a native alternative)
inoremap jkl <ESC>          " Note that jk is not enough because of 'Dijkstra'

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Ease long inner navigation (move half-screen up or down)
noremap <C-S-k> <C-U>
noremap <C-S-j> <C-D>

" Move a line of text using ALT+[jk]
" NB: it seems it does not work (<A- > or <M- > seems to have none effect :-( )
nmap <M-j> mz:m+<cr>`z
nmap <M-k> mz:m-2<cr>`z
vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z
vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z

" Useful mappings for managing tabs
nmap <leader>tn :tabnew<cr>
nmap <leader>te :tabe .<cr>
nmap <leader>tt :tabe ./
nmap <leader>to :tabonly<cr>
nmap <leader>tc :tabclose<cr>
nmap <leader>tm :tabmove

" Opens a new tab with the current buffer's path
" Super useful when editing files in the same directory
nmap <leader>th :tabedit <c-r>=expand("%:p:h")<cr>/

" cd to the directory containing the file in the buffer
nmap  <leader>cd :lcd %:h

" Toggle displayed text wrapping
map <leader>sw :set wrap!<cr>

" Map to insert python debugger
map  <F10> <Esc>import pdb;pdb.set_trace()<CR><Esc>

" Open current url in iceweasel
vmap <leader>o :<C-U>!iceweasel "<cfile>" >& /dev/null<CR><CR>
"" « v,d » et « v,s » lancent firefox et une recherche (définition ou synonyme) dans le tlfi sur le mot courant
"vmap ,d :<C-U>!firefox "http://www.cnrtl.fr/lexicographie/<cword>" >& /dev/null<CR><CR>
"vmap ,s :<C-U>!firefox "http://www.cnrtl.fr/synonymie/<cword>" >& /dev/null<CR><CR>
"" « v,g » comme ci-dessus mais pour google
"vmap ,g :<C-U>!firefox "http://www.google.fr/search?hl=fr&q=<cword>&btnG=Recherche+Google&meta=" >& /dev/null<CR><CR>
""« v,w » comme ci-dessus mais pour wikipedia
"vmap ,w :<C-U>!firefox "http://fr.wikipedia.org/wiki/<cword>" >& /dev/null<CR><CR>
"" « v,c » comme ci-dessus mais pour le conjugueur
"vmap ,c :<C-U>!firefox "http://www.leconjugueur.com/php5/index.php?v=<cword>" >& /dev/null<CR><CR>
"}}}

""""""""""""""""""""{{{ PLUGINS

let g:Powerline_symbols = 'fancy'

" Map for NerdCommenter
map  cc <leader>c<space>
vmap cc <leader>c<space>
map  <leader>cc <leader>c<space>
vmap <leader>cc <leader>c<space>

" Params and Map for NerdTree
let NERDChristmasTree = 1
let NERDTreeSortOrder = ['\/$', '\.js*', '\.cpp$', '\.h$', '*']
nmap t :NERDTreeToggle<cr>
nmap <C-b> :NERDTreeToggle<cr>

""" Jedi disable auto completion popup
"let g:jedi#popup_on_dot = 0
"let g:jedi#show_call_signatures = "0"

"}}}

""""""""""""""""""""{{{ COMMAND REFERENCES

" *                     - searches for word under cursor
" gd                    - finds definition of variable/function under cursor
" ga                    - prints the ascii value of character under cursor
" gf                    - opens file under the cursor (in split view)
" gi                    - goes to insert mode in the same spot as you last inserted
" ~                     - changes case of character
" :r !<cmd>             - reads the output of the shell <cmd> into the file
" :% s/hello/A/gc       - typical search and replace command

" :% !tidy              - runs the code through the 'tidy' program

" :runtime! syntax/2html.vim
" :10,40TOhtml

" command reference ->  " za : fold toggle  toggles between a fold being opened and closed (zA does it recursively)
                        " zf : create/define a fold (compatible with motion or visual mode
                        " zc : fold close   close 1 fold under the cursor (zC does it recursively)
                        " zo : fold open    open 1 fold under the cursor (zO does it recursively)
                        " zm : fold more    increases foldlevel by 1 (zM opens all folds)
                        " zr : fold reduce  decreses foldlevel by 1 (zR closes all folds
                        "
                        "
" Native alternative to <ESC> : <CTRL + C >

"Vim has extended vi to allow use of the * register as a reference to the system clipboard. So we can use normal mode commands like: "*dd or 1G"*yG to copy things into the * register and "*p to paste text from it. We can also use this * register with the ex yank command, so :%y * will accomplish the same goal as gg"*yG (copy all text into the system clipboard so it can be pasted into an X or MS Windows application). 
"
"    "+2yy ¿ copy two lines to X11 clipboard
"    "+dd ¿ cut line to X11 clipboard
"    "+p ¿ paste X11 clipboard 
"
"
" VimTip21 is spot on but the title suggests it's for MS Windows only. It also mentions that we can change out settings so the "anonymous" register is aliased to the * register using:

"           set clipboard=unnamed

"}}}

""""""""""""""""""""{{{ CUSTOM FUNCTIONS KEYBINDINGS
:command -nargs=+ Find vimgrep <args>|cw

""" FocusMode
nnoremap <F8> :call ToggleFocusMode()<cr>
nnoremap <leader>tf :call ToggleFocusMode()<cr>

""" Allow/disallow textwidth formating
nnoremap <F4> :call ToggleTextwidthMode()<cr>
nnoremap <leader>tw :call ToggleTextwidthMode()<cr>

""" Switch between tab value
nnoremap <F5> :call SwitchTabValue()<cr>
nnoremap <leader>stv :call SwitchTabValue()<cr>

" Delete trailing white space 
nnoremap <F6> :call DeleteTrailingWS()<cr>
nnoremap <leader>cws :call DeleteTrailingWS()<cr>

"}}}
